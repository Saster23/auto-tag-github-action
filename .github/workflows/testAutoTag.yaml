name: Auto Tag and Release

on:
  push:
    branches:
      - main

jobs:
  tag-and-release:
    runs-on: ubuntu-latest

    outputs:
      created_tag: ${{ steps.tag.outputs.new_tag }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get latest version and determine new tag
      id: tag
      run: |
        latest_tag=$(git tag | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1)

        if [[ -z "$latest_tag" ]]; then
          new_tag="v1.0.0"
        else
          IFS='.' read -r major minor patch <<<"${latest_tag#v}"
          patch=$((patch + 1))
          new_tag="v$major.$minor.$patch"
        fi

        echo "New tag: $new_tag"
        echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

    - name: Create and push tag
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git tag ${{ steps.tag.outputs.new_tag }}
        git push origin ${{ steps.tag.outputs.new_tag }}

    - name: Create GitHub release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.new_tag }}
        release_name: Release ${{ steps.tag.outputs.new_tag }}
        body: |
          Automated release for ${{ steps.tag.outputs.new_tag }}.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  post-tag-message:
    runs-on: ubuntu-latest
    needs: tag-and-release
    steps:
      - name: Print success message
        run: echo "successful bro â€” created tag ${{ needs.tag-and-release.outputs.created_tag }}"

        
        
        
        #can change your tag format in latest_tag current format is vx.x.x where x are numbers
